#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Verifies that all required dependencies are present for GGPK Explorer build.

.DESCRIPTION
    This script checks for the presence of all required DLL files and source code
    needed to build GGPK Explorer successfully.

.EXAMPLE
    .\scripts\Verify-Dependencies.ps1
#>

param(
    [switch]$Detailed = $false
)

# Define required files (all auto-generated by setup scripts)
$requiredFiles = @{
    "libs/LibGGPK3.dll" = "Core GGPK file handling library (auto-generated)"
    "libs/LibBundle3.dll" = "Bundle file operations library (auto-generated)"
    "libs/LibBundledGGPK3.dll" = "Unified GGPK+Bundle access library (auto-generated)"
    "libs/SystemExtensions.dll" = "System extensions library (auto-generated)"
    "libs/oo2core.dll" = "Oodle compression library (manual copy from Path of Exile required)"
}

$requiredDirectories = @{}

Write-Host "üîç GGPK Explorer Dependency Verification" -ForegroundColor Cyan
Write-Host "=" * 50

$allPresent = $true
$missingCount = 0

# Check required files
Write-Host "`nüìÅ Required Files:" -ForegroundColor Yellow
foreach ($file in $requiredFiles.Keys) {
    $description = $requiredFiles[$file]
    if (Test-Path $file) {
        Write-Host "  ‚úÖ $file" -ForegroundColor Green
        if ($Detailed) {
            $fileInfo = Get-Item $file
            Write-Host "     Size: $([math]::Round($fileInfo.Length / 1MB, 2)) MB" -ForegroundColor Gray
            Write-Host "     Modified: $($fileInfo.LastWriteTime)" -ForegroundColor Gray
        }
    } else {
        Write-Host "  ‚ùå $file - MISSING" -ForegroundColor Red
        Write-Host "     Description: $description" -ForegroundColor Gray
        $allPresent = $false
        $missingCount++
    }
}

# Check required directories
Write-Host "`nüìÇ Required Directories:" -ForegroundColor Yellow
foreach ($dir in $requiredDirectories.Keys) {
    $description = $requiredDirectories[$dir]
    if (Test-Path $dir -PathType Container) {
        Write-Host "  ‚úÖ $dir" -ForegroundColor Green
        if ($Detailed) {
            $itemCount = (Get-ChildItem $dir -Recurse -File).Count
            Write-Host "     Files: $itemCount" -ForegroundColor Gray
        }
    } else {
        Write-Host "  ‚ùå $dir - MISSING" -ForegroundColor Red
        Write-Host "     Description: $description" -ForegroundColor Gray
        $allPresent = $false
        $missingCount++
    }
}

# Additional checks
Write-Host "`nüîß Setup Information:" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ All DLLs are auto-generated by setup scripts" -ForegroundColor Gray
Write-Host "  ‚Ä¢ No source code is stored in the repository" -ForegroundColor Gray
Write-Host "  ‚Ä¢ Only oo2core.dll requires manual setup" -ForegroundColor Gray

# Summary
Write-Host "`n" + "=" * 50
if ($allPresent) {
    Write-Host "üéâ All dependencies are present!" -ForegroundColor Green
    Write-Host "‚úÖ Ready to build GGPK Explorer" -ForegroundColor Green
    
    Write-Host "`nüöÄ Next Steps:" -ForegroundColor Cyan
    Write-Host "  ‚Ä¢ Build: dotnet build" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Run: dotnet run --project src\GGPKExplorer" -ForegroundColor Gray
    
    exit 0
} else {
    Write-Host "‚ùå Missing $missingCount dependencies" -ForegroundColor Red
    Write-Host "üìñ See libs/README.md for setup instructions" -ForegroundColor Yellow
    
    Write-Host "`nüîß Setup Commands:" -ForegroundColor Cyan
    Write-Host "  1. Run automated setup (recommended):" -ForegroundColor White
    Write-Host "     .\scripts\Setup-All-Dependencies.ps1" -ForegroundColor Gray
    
    Write-Host "`n  2. Manually copy oo2core.dll from Path of Exile:" -ForegroundColor White
    Write-Host "     Copy-Item 'C:\Program Files (x86)\Steam\steamapps\common\Path of Exile\oo2core_8_win64.dll' libs\oo2core.dll" -ForegroundColor Gray
    
    Write-Host "`n  3. Verify setup:" -ForegroundColor White
    Write-Host "     .\scripts\Verify-Dependencies.ps1" -ForegroundColor Gray
    
    exit 1
}