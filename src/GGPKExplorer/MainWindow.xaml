<ui:FluentWindow x:Class="GGPKExplorer.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:GGPKExplorer"
                xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                xmlns:views="clr-namespace:GGPKExplorer.Views"
                xmlns:converters="clr-namespace:GGPKExplorer.Converters"
                mc:Ignorable="d"
                Title="GGPK Explorer v1.0.0 - Official" 
                Height="800" 
                Width="1200"
                MinHeight="600"
                MinWidth="800"
                WindowStartupLocation="CenterScreen"
                ExtendsContentIntoTitleBar="False"
                WindowStyle="None"
                AllowsTransparency="False"
                ResizeMode="CanResize"
                WindowBackdropType="Mica"
                AutomationProperties.Name="GGPK Explorer Main Window"
                AutomationProperties.HelpText="Main window for browsing GGPK files. Use the File menu to open a file."
                KeyboardNavigation.TabNavigation="Continue"
                KeyboardNavigation.ControlTabNavigation="Continue">

    <ui:FluentWindow.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </ui:FluentWindow.Resources>
    

    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>



        <!-- Menu Bar with Window Controls -->
        <Grid Grid.Row="0" Background="Transparent" Margin="12,4,12,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!-- Background drag area -->
            <Border Grid.Column="0" Grid.ColumnSpan="5" 
                    Background="Transparent"
                    MouseLeftButtonDown="TitleBar_MouseLeftButtonDown" />
            
            <!-- App Name with Logo -->
            <StackPanel Grid.Column="0" 
                        Orientation="Horizontal"
                        VerticalAlignment="Center"
                        Margin="0,0,16,0"
                        MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                
                <!-- Path of Exile Logo -->
                <Viewbox Width="20" Height="20" Margin="0,0,8,0">
                    <Canvas Width="32" Height="32">
                        <!-- Outer ring -->
                        <Ellipse Width="30" Height="30" 
                                 Canvas.Left="1" Canvas.Top="1"
                                 Fill="Transparent" 
                                 Stroke="{DynamicResource TextFillColorSecondaryBrush}" 
                                 StrokeThickness="2"/>
                        
                        <!-- Inner geometric pattern -->
                        <Path Data="M16 4 L24 12 L20 16 L24 20 L16 28 L8 20 L12 16 L8 12 Z" 
                              Fill="Transparent" 
                              Stroke="{DynamicResource TextFillColorSecondaryBrush}" 
                              StrokeThickness="1.5"/>
                        
                        <!-- Center diamond -->
                        <Path Data="M16 10 L20 14 L16 18 L12 14 Z" 
                              Fill="{DynamicResource TextFillColorSecondaryBrush}"/>
                        
                        <!-- Corner accents -->
                        <Ellipse Width="3" Height="3" Canvas.Left="14.5" Canvas.Top="4.5" Fill="{DynamicResource TextFillColorSecondaryBrush}"/>
                        <Ellipse Width="3" Height="3" Canvas.Left="24.5" Canvas.Top="14.5" Fill="{DynamicResource TextFillColorSecondaryBrush}"/>
                        <Ellipse Width="3" Height="3" Canvas.Left="14.5" Canvas.Top="24.5" Fill="{DynamicResource TextFillColorSecondaryBrush}"/>
                        <Ellipse Width="3" Height="3" Canvas.Left="4.5" Canvas.Top="14.5" Fill="{DynamicResource TextFillColorSecondaryBrush}"/>
                    </Canvas>
                </Viewbox>
                
                <TextBlock Text="GGPK Explorer v1.0.0 - Official"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Medium"
                           Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
            </StackPanel>
            
            <!-- Menu -->
            <Menu x:Name="MenuBar" Grid.Column="1" Background="Transparent"
                  AutomationProperties.Name="Main Menu"
                  AutomationProperties.HelpText="Application menu with file operations"
                  KeyboardNavigation.TabNavigation="Continue"
                  TabIndex="0">
            <MenuItem Header="_File" Padding="8,4"
                      AutomationProperties.Name="File Menu"
                      AutomationProperties.HelpText="File operations including open, close, and recent files">
                <MenuItem Header="_Open GGPK File..." 
                          Command="{Binding OpenFileCommand}"
                          AutomationProperties.Name="Open GGPK File"
                          AutomationProperties.HelpText="Open a GGPK file for browsing">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="FolderOpen24" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Recent Files" Name="RecentFilesMenuItem">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="History24" />
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="ItemsSource" Value="{Binding RecentFiles}" />
                            <Setter Property="ItemContainerStyle">
                                <Setter.Value>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding}" />
                                        <Setter Property="Command" Value="{Binding DataContext.OpenRecentFileCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                        <Setter Property="ToolTip" Value="{Binding}" />
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <Separator />
                <MenuItem Header="E_xit" 
                          Command="{Binding ExitCommand}">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Power24" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        
        <!-- Empty space for dragging -->
        <Border Grid.Column="2" 
                Background="Transparent"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown" />
        

        
        <!-- Window Control Buttons -->
        <StackPanel Grid.Column="3" 
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right">
            <Button x:Name="MinimizeButton"
                    Content="🗕"
                    Width="46"
                    Height="32"
                    Background="Transparent"
                    BorderThickness="0"
                    FontSize="12"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Click="MinimizeButton_Click"
                    ToolTip="Minimize">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                                        VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="MaximizeButton"
                    Content="🗖"
                    Width="46"
                    Height="32"
                    Background="Transparent"
                    BorderThickness="0"
                    FontSize="12"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Click="MaximizeButton_Click"
                    ToolTip="Maximize">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                                        VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="CloseButton"
                    Content="🗙"
                    Width="46"
                    Height="32"
                    Background="Transparent"
                    BorderThickness="0"
                    FontSize="12"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Click="CloseButton_Click"
                    ToolTip="Close">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                                        VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E81123"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        
        </Grid>

        <!-- Main Content Area -->
        <Grid Grid.Row="1" Margin="12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <!-- Sidebar -->
            <views:SidebarView Grid.Column="0"
                               DataContext="{Binding SidebarViewModel}"
                               AutomationProperties.Name="Navigation Sidebar"
                               AutomationProperties.HelpText="Navigation sidebar with quick access to different views" />
            
            <!-- Main Content -->
            <Grid Grid.Column="1" Margin="12,0,0,0">
                <!-- Explorer View (always visible) -->
                <views:ExplorerView x:Name="MainExplorerView"
                                    DataContext="{Binding ExplorerViewModel}"
                                    TabIndex="1"
                                    AutomationProperties.Name="GGPK File Explorer"
                                    AutomationProperties.HelpText="Main file explorer interface with navigation tree and file list" />
            </Grid>
        </Grid>

        <!-- Status Bar with Progress -->
        <Grid x:Name="StatusBar" Grid.Row="2" Style="{StaticResource GGPKStatusBarStyle}">
            <Grid.RenderTransform>
                <TranslateTransform Y="0"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{StaticResource StatusBarSlideUpAnimation}"/>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>
            
            <!-- Status Text -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="12,0">
                <ui:SymbolIcon Symbol="Info16" 
                               FontSize="14" 
                               Margin="0,0,6,0"
                               VerticalAlignment="Center" />
                <TextBlock Text="{Binding StatusText}" 
                           VerticalAlignment="Center"
                           FontSize="12" />
            </StackPanel>
            
            <!-- Loading Indicator -->
            <StackPanel Grid.Column="1" 
                        Orientation="Horizontal" 
                        VerticalAlignment="Center" 
                        Margin="8,0"
                        Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ui:ProgressRing IsIndeterminate="False" 
                                 Progress="{Binding ProgressValue}"
                                 Width="16" 
                                 Height="16" 
                                 Margin="0,0,6,0" />
                <TextBlock Text="{Binding ProgressText}" 
                           FontSize="12" 
                           VerticalAlignment="Center" />
            </StackPanel>
            
            <!-- Progress Bar -->
            <ProgressBar Grid.Column="2" 
                         Value="{Binding ProgressValue}"
                         Minimum="0"
                         Maximum="100"
                         Height="4"
                         VerticalAlignment="Center"
                         Margin="8,0,12,0"
                         Visibility="{Binding IsProgressVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
        
        <!-- Floating toasts are now handled by FloatingToastService using Popups -->
    </Grid>
</ui:FluentWindow>
