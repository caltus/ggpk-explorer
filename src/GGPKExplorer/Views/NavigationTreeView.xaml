<UserControl x:Class="GGPKExplorer.Views.NavigationTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:converters="clr-namespace:GGPKExplorer.Converters"
             xmlns:viewmodels="clr-namespace:GGPKExplorer.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance Type=viewmodels:NavigationTreeViewModel}">

    <UserControl.Resources>
        <converters:FileSizeConverter x:Key="FileSizeConverter" />
        <converters:NodeTypeToIconConverter x:Key="NodeTypeToIconConverter" />
        <converters:FolderIconConverter x:Key="FolderIconConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />

        <!-- TreeView Item Style -->
        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown" />
            <Style.Triggers>
                <!-- Multi-selection has priority over single selection -->
                <DataTrigger Binding="{Binding IsMultiSelected}" Value="True">
                    <Setter Property="FontWeight" Value="SemiBold" />
                    <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
                    <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" />
                </DataTrigger>
                <!-- Single selection (only when not multi-selected) -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMultiSelected}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <!-- Mouse over (only when not selected) -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMultiSelected}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!-- TreeView Item Template -->
        <HierarchicalDataTemplate x:Key="TreeNodeTemplate" 
                                  DataType="{x:Type viewmodels:TreeNodeViewModel}"
                                  ItemsSource="{Binding Children}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Icon -->
                <ui:SymbolIcon Grid.Column="0" 
                               Margin="0,0,6,0"
                               VerticalAlignment="Center">
                    <ui:SymbolIcon.Symbol>
                        <MultiBinding Converter="{StaticResource FolderIconConverter}">
                            <Binding Path="NodeInfo.Type" />
                            <Binding Path="IsExpanded" />
                        </MultiBinding>
                    </ui:SymbolIcon.Symbol>
                </ui:SymbolIcon>

                <!-- Name and Details -->
                <StackPanel Grid.Column="1" 
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <TextBlock Text="{Binding DisplayName}"
                               TextTrimming="CharacterEllipsis"
                               ToolTip="{Binding NodeInfo.FullPath}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                    
                    <!-- File size for non-directories -->
                    <TextBlock Text="{Binding NodeInfo.Size, Converter={StaticResource FileSizeConverter}, StringFormat=' ({0})'}"
                               FontSize="11"
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               Margin="4,0,0,0"
                               VerticalAlignment="Center"
                               Visibility="{Binding ShowFileDetails, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </StackPanel>

                <!-- Compression Badge -->
                <ui:InfoBadge Grid.Column="2"
                              Value="{Binding NodeInfo.Compression.Type}"
                              Severity="Informational"
                              Margin="4,0,4,0"
                              VerticalAlignment="Center"
                              Visibility="{Binding NodeInfo.Compression, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <!-- Loading indicator -->
                <ui:ProgressRing Grid.Column="3"
                                 Width="16" Height="16"
                                 Margin="4,0,0,0"
                                 IsIndeterminate="True"
                                 Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <!-- Context Menu -->
                <Grid.ContextMenu>
                    <ContextMenu x:Name="NodeContextMenu" Opened="NodeContextMenu_Opened">
                        <MenuItem Header="Extract..." 
                                  Command="{Binding ExtractCommand}">
                            <MenuItem.Icon>
                                <ui:SymbolIcon Symbol="FolderArrowUp24" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Properties..." 
                                  Command="{Binding PropertiesCommand}">
                            <MenuItem.Icon>
                                <ui:SymbolIcon Symbol="Info24" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>
            </Grid>
        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Border Grid.Row="0" 
                Background="{DynamicResource ApplicationBackgroundBrush}"
                BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                BorderThickness="0,0,0,1"
                Padding="8,6">
            <!-- Search Box -->
            <ui:TextBox x:Name="TreeSearchBox"
                        PlaceholderText="Search files..."
                        Height="32"
                        VerticalAlignment="Center"
                        FontSize="14"
                        Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged}"
                        KeyDown="SearchBox_KeyDown">
                <ui:TextBox.Icon>
                    <ui:SymbolIcon Symbol="Search12" />
                </ui:TextBox.Icon>
            </ui:TextBox>
        </Border>

        <!-- TreeView -->
        <ScrollViewer Grid.Row="1" 
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Auto">
            <TreeView x:Name="NavigationTree"
                      ItemsSource="{Binding RootNodes}"
                      ItemTemplate="{StaticResource TreeNodeTemplate}"
                      ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                      Background="{DynamicResource ApplicationBackgroundBrush}"
                      BorderThickness="0"
                      Padding="8"
                      SelectedItemChanged="NavigationTree_SelectedItemChanged"
                      PreviewMouseDoubleClick="NavigationTree_MouseDoubleClick"
                      PreviewMouseLeftButtonDown="NavigationTree_PreviewMouseLeftButtonDown"
                      KeyDown="NavigationTree_KeyDown"
                      TabIndex="1"
                      AutomationProperties.Name="GGPK Navigation Tree"
                      AutomationProperties.HelpText="Navigate through GGPK file structure. Use arrow keys to navigate, Enter to select, Space to expand/collapse folders. Hold Ctrl to select multiple items."
                      KeyboardNavigation.TabNavigation="Continue"
                      KeyboardNavigation.DirectionalNavigation="Continue">
                <TreeView.RenderTransform>
                    <TranslateTransform X="0" Y="0"/>
                </TreeView.RenderTransform>
                <TreeView.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource SlideInFromLeftAnimation}"/>
                    </EventTrigger>
                </TreeView.Triggers>
                <TreeView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" 
                                                VirtualizationMode="Recycling" />
                    </ItemsPanelTemplate>
                </TreeView.ItemsPanel>
            </TreeView>
        </ScrollViewer>

        <!-- Loading Overlay -->
        <Grid Grid.Row="1" 
              Background="{DynamicResource ApplicationBackgroundBrush}"
              Opacity="0.8"
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel HorizontalAlignment="Center" 
                        VerticalAlignment="Center">
                <ui:ProgressRing Width="32" Height="32" 
                                 IsIndeterminate="True"
                                 Margin="0,0,0,8" />
                <TextBlock Text="Loading GGPK structure..."
                           HorizontalAlignment="Center"
                           Style="{StaticResource BodyTextBlockStyle}" />
            </StackPanel>
        </Grid>

        <!-- Status Bar -->
        <Border Grid.Row="2" 
                Background="{DynamicResource ControlFillColorDefaultBrush}"
                BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                BorderThickness="0,1,0,0"
                Padding="8,4">
            <TextBlock Text="{Binding StatusText}"
                       Style="{StaticResource CaptionTextBlockStyle}"
                       Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
        </Border>
    </Grid>
</UserControl>